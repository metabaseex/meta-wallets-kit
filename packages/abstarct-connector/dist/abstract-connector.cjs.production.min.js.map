{"version":3,"file":"abstract-connector.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import {\r\n  ChainIdCallback,\r\n  ConnectCallback,\r\n  Connector,\r\n  DefaultConnectionPayload,\r\n  DisconnectCallback,\r\n  SubscribedObject,\r\n} from '@meta-wallets-kit/types';\r\nimport { getAccount, getChainId, SendingInterface } from '@meta-wallets-kit/utils';\r\n\r\nexport abstract class AbstractConnector<P extends DefaultConnectionPayload>\r\n  implements Connector<P> {\r\n  protected payload: P | null = null;\r\n  private sendingInterface: SendingInterface = 'EIP 1193';\r\n\r\n  public abstract connect(): Promise<P>;\r\n\r\n  public async disconnect() {\r\n    this.payload = null;\r\n  }\r\n\r\n  public async getAccount(): Promise<string | null> {\r\n    if (!this.payload) {\r\n      return null;\r\n    }\r\n\r\n    const { account, sendingInterface } = await getAccount(\r\n      this.payload.provider,\r\n      this.sendingInterface,\r\n    );\r\n\r\n    this.sendingInterface = sendingInterface;\r\n\r\n    return account;\r\n  }\r\n\r\n  public async getChainId(): Promise<number | null> {\r\n    if (!this.payload) {\r\n      return null;\r\n    }\r\n\r\n    const { chainId, sendingInterface } = await getChainId(\r\n      this.payload.provider,\r\n      this.sendingInterface,\r\n    );\r\n\r\n    this.sendingInterface = sendingInterface;\r\n\r\n    return chainId;\r\n  }\r\n\r\n  public getConnectionPayload() {\r\n    return this.payload;\r\n  }\r\n\r\n  public subscribeConnectAccount(callback: ConnectCallback): SubscribedObject {\r\n    const convertedCallback = (accounts: string[]) => callback(accounts[0]);\r\n\r\n    this.payload?.provider.on && this.payload.provider.on('accountsChanged', convertedCallback);\r\n\r\n    return {\r\n      unsubscribe: () => {\r\n        this.payload?.provider.removeListener &&\r\n          this.payload.provider.removeListener('accountsChanged', convertedCallback);\r\n      },\r\n    };\r\n  }\r\n\r\n  public subscribeChainId(callback: ChainIdCallback): SubscribedObject {\r\n    const convertedCallback = (chainId: number | string) => {\r\n      const convertedChainId = typeof chainId === 'string' ? parseInt(chainId, 16) : chainId;\r\n\r\n      if (Number.isNaN(convertedChainId)) {\r\n        throw new Error('ChainId is incorrect');\r\n      } else {\r\n        callback(convertedChainId);\r\n      }\r\n    };\r\n\r\n    this.payload?.provider.on && this.payload.provider.on('chainChanged', convertedCallback);\r\n\r\n    return {\r\n      unsubscribe: () => {\r\n        this.payload?.provider.removeListener &&\r\n          this.payload.provider.removeListener('chainChanged', convertedCallback);\r\n      },\r\n    };\r\n  }\r\n\r\n  public subscribeDisconnect(callback: DisconnectCallback): SubscribedObject {\r\n    this.payload?.provider.on && this.payload.provider.on('disconnect', callback);\r\n\r\n    return {\r\n      unsubscribe: () => {\r\n        this.payload?.provider.removeListener &&\r\n          this.payload.provider.removeListener('disconnect', callback);\r\n      },\r\n    };\r\n  }\r\n}\r\n"],"names":["AbstractConnector","this","_proto","prototype","disconnect","_disconnect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","payload","stop","apply","arguments","getAccount","_getAccount2","_callee2","_yield$_getAccount","account","_context2","abrupt","provider","sendingInterface","sent","getChainId","_getChainId2","_callee3","_yield$_getChainId","chainId","_context3","getConnectionPayload","subscribeConnectAccount","callback","convertedCallback","accounts","_this$payload","on","unsubscribe","_this$payload2","_this","removeListener","subscribeChainId","convertedChainId","parseInt","Number","isNaN","Error","_this$payload3","_this2$payload","_this2","subscribeDisconnect","_this$payload4","_this3$payload","_this3"],"mappings":"q5NAUA,SAAAA,IAEYC,aAAoB,KACtBA,sBAAqC,WAsF9C,IAAAC,EAAAF,EAAAG,UADE,OACFD,EAlFcE,sBAAU,IAAAC,EAAAC,EAAAC,IAAAC,MAAhB,SAAAC,IAAA,OAAAF,IAAAG,eAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACLZ,KAAKa,QAAU,KAAK,OAAA,UAAA,OAAAH,EAAAI,UAAAN,YACrB,OAAA,WAAA,OAAAJ,EAAAW,WAAAC,eAAAf,EAEYgB,sBAAU,IAAAC,EAAAb,EAAAC,IAAAC,MAAhB,SAAAY,IAAA,IAAAC,EAAAC,EAAA,OAAAf,IAAAG,eAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OAAA,GACAZ,KAAKa,SAAOS,EAAAV,OAAA,MAAA,OAAAU,EAAAC,gBACR,MAAI,OAAA,OAAAD,EAAAV,OAG+BK,aAC1CjB,KAAKa,QAAQW,SACbxB,KAAKyB,kBACN,OAEwC,OALjCJ,GAGPD,EAAAE,EAAAI,MAHOL,QAKRrB,KAAKyB,iBAL4BL,EAAhBK,iBAKwBH,EAAAC,gBAElCF,GAAO,OAAA,UAAA,OAAAC,EAAAR,UAAAK,YACf,OAAA,WAAA,OAAAD,EAAAH,WAAAC,eAAAf,EAEY0B,sBAAU,IAAAC,EAAAvB,EAAAC,IAAAC,MAAhB,SAAAsB,IAAA,IAAAC,EAAAC,EAAA,OAAAzB,IAAAG,eAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAAA,GACAZ,KAAKa,SAAOmB,EAAApB,OAAA,MAAA,OAAAoB,EAAAT,gBACR,MAAI,OAAA,OAAAS,EAAApB,OAG+Be,aAC1C3B,KAAKa,QAAQW,SACbxB,KAAKyB,kBACN,OAEwC,OALjCM,GAGPD,EAAAE,EAAAN,MAHOK,QAKR/B,KAAKyB,iBAL4BK,EAAhBL,iBAKwBO,EAAAT,gBAElCQ,GAAO,OAAA,UAAA,OAAAC,EAAAlB,UAAAe,YACf,OAAA,WAAA,OAAAD,EAAAb,WAAAC,eAAAf,EAEMgC,qBAAA,WACL,OAAOjC,KAAKa,SACbZ,EAEMiC,wBAAA,SAAwBC,gBACvBC,EAAoB,SAACC,GAAkB,OAAKF,EAASE,EAAS,KAIpE,cAFAC,OAAKzB,gBAALyB,EAAcd,SAASe,KAAMvC,KAAKa,QAAQW,SAASe,GAAG,kBAAmBH,GAElE,CACLI,YAAa,yBACXC,EAAAC,EAAK7B,gBAAL4B,EAAcjB,SAASmB,iBACrBD,EAAK7B,QAAQW,SAASmB,eAAe,kBAAmBP,MAG/DnC,EAEM2C,iBAAA,SAAiBT,gBAChBC,EAAoB,SAACL,GACzB,IAAMc,EAAsC,iBAAZd,EAAuBe,SAASf,EAAS,IAAMA,EAE/E,GAAIgB,OAAOC,MAAMH,GACf,MAAM,IAAII,MAAM,wBAEhBd,EAASU,IAMb,cAFAK,OAAKrC,gBAALqC,EAAc1B,SAASe,KAAMvC,KAAKa,QAAQW,SAASe,GAAG,eAAgBH,GAE/D,CACLI,YAAa,yBACXW,EAAAC,EAAKvC,gBAALsC,EAAc3B,SAASmB,iBACrBS,EAAKvC,QAAQW,SAASmB,eAAe,eAAgBP,MAG5DnC,EAEMoD,oBAAA,SAAoBlB,gBAGzB,cAFAmB,OAAKzC,gBAALyC,EAAc9B,SAASe,KAAMvC,KAAKa,QAAQW,SAASe,GAAG,aAAcJ,GAE7D,CACLK,YAAa,yBACXe,EAAAC,EAAK3C,gBAAL0C,EAAc/B,SAASmB,iBACrBa,EAAK3C,QAAQW,SAASmB,eAAe,aAAcR,MAG1DpC"}