{"version":3,"file":"utils.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import { Provider } from '@meta-wallets-kit/types';\r\n\r\nconst isProduction: boolean = process.env.NODE_ENV === 'production';\r\n\r\nexport function warning(message: string) {\r\n  if (!isProduction) {\r\n    console.warn(message);\r\n  }\r\n}\r\n\r\nexport function invariant(condition: any, message?: string): asserts condition {\r\n  if (!condition) {\r\n    throw new Error(`Invariant failed${isProduction || !message ? '.' : `: ${message}`}`);\r\n  }\r\n}\r\n\r\nexport type SendingInterface = 'EIP 1193' | 'Old Web3.js';\r\n\r\nexport async function getAccount(\r\n  provider: Provider,\r\n  sendingInterface?: SendingInterface,\r\n): Promise<{ account: string | null; sendingInterface: SendingInterface }> {\r\n  const { result: account, sendingInterface: nextInterface } = await send<string | null>(\r\n    provider,\r\n    'eth_accounts',\r\n    (accounts: string[]) => accounts[0] || null,\r\n    sendingInterface,\r\n  );\r\n  return { account, sendingInterface: nextInterface };\r\n}\r\n\r\nexport async function getChainId(\r\n  provider: Provider,\r\n  sendingInterface?: SendingInterface,\r\n): Promise<{ chainId: number; sendingInterface: SendingInterface }> {\r\n  const { result: chainId, sendingInterface: nextInterface } = await send<number>(\r\n    provider,\r\n    'eth_chainId',\r\n    (id: string | number) => {\r\n      if (!id) {\r\n        throw new Error('ChainId is not found');\r\n      }\r\n\r\n      return Number(id);\r\n    },\r\n    sendingInterface,\r\n  );\r\n  return { chainId, sendingInterface: nextInterface };\r\n}\r\n\r\nasync function send<T>(\r\n  provider: Provider,\r\n  method: string,\r\n  convert: (value: any) => T,\r\n  sendingInterface?: SendingInterface,\r\n): Promise<{ result: T; sendingInterface: SendingInterface }> {\r\n  if (sendingInterface !== 'Old Web3.js') {\r\n    try {\r\n      const sendResult = await provider.send(method);\r\n      const result = convert(isJsonRPCResponse(sendResult) ? sendResult.result : sendResult);\r\n      return { result, sendingInterface: 'EIP 1193' };\r\n    } catch {\r\n      warning('EIP 1193 sending failed, trying to old Web3.js sending interface');\r\n    }\r\n  }\r\n\r\n  const result: T = await new Promise((resolve, reject) => {\r\n    (provider.sendAsync || provider.send).call(\r\n      provider,\r\n      { method },\r\n      (err: any, sendResult: any) => {\r\n        err && reject(err);\r\n        resolve(convert(sendResult?.result));\r\n      },\r\n    );\r\n  });\r\n\r\n  return { result, sendingInterface: 'Old Web3.js' };\r\n}\r\n\r\nconst isJsonRPCResponse = (response: any): response is { result: any } => {\r\n  return typeof response === 'object' && 'jsonrpc' in response && 'result' in response;\r\n};\r\n"],"names":["_getAccount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","provider","sendingInterface","_yield$send","wrap","_context","prev","next","send","accounts","abrupt","account","sent","result","stop","apply","arguments","_getChainId","_callee2","_yield$send2","_context2","id","Error","Number","chainId","_x5","_x6","_x7","_x8","_send","_callee3","method","convert","sendResult","_result","_context3","isJsonRPCResponse","t0","Promise","resolve","reject","sendAsync","call","err","response","_x","_x2","_x3","_x4","condition","message"],"mappings":"gxNA6BC,SAAAA,IAAA,OAAAA,EAAAC,EAAAC,IAAAC,MAXM,SAAAC,EACLC,EACAC,GAAmC,IAAAC,EAAA,OAAAL,IAAAM,eAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAA,OAAAF,EAAAE,OAEgCC,EACjEP,EACA,gBACA,SAACQ,GAAkB,OAAKA,EAAS,IAAM,OACvCP,GACD,OALwC,OAAAG,EAAAK,gBAMlC,CAAEC,SADRR,EAAAE,EAAAO,MALOC,OAMUX,iBANsCC,EAA/BD,mBAM0B,OAAA,UAAA,OAAAG,EAAAS,UAAAd,QACpDe,WAAAC,WAmBA,SAAAC,IAAA,OAAAA,EAAApB,EAAAC,IAAAC,MAjBM,SAAAmB,EACLjB,EACAC,GAAmC,IAAAiB,EAAA,OAAArB,IAAAM,eAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAAA,OAAAa,EAAAb,OAEgCC,EACjEP,EACA,eACA,SAACoB,GACC,IAAKA,EACH,MAAM,IAAIC,MAAM,wBAGlB,OAAOC,OAAOF,KAEhBnB,GACD,OAXwC,OAAAkB,EAAAV,gBAYlC,CAAEc,SADRL,EAAAC,EAAAR,MAXOC,OAYUX,iBAZsCiB,EAA/BjB,mBAY0B,OAAA,UAAA,OAAAkB,EAAAN,UAAAI,QACpDH,WAAAC,WAAA,SAEcR,EAAIiB,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAAd,WAAAC,WAAA,SAAAa,IA4BlB,OA5BkBA,EAAAhC,EAAAC,IAAAC,MAAnB,SAAA+B,EACE7B,EACA8B,EACAC,EACA9B,GAAmC,IAAA+B,EAAAC,EAAA,OAAApC,IAAAM,eAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,OAAA,GAEV,gBAArBL,GAAkCiC,EAAA5B,QAAA,MAAA,OAAA4B,EAAA7B,OAAA6B,EAAA5B,OAETN,EAASO,KAAKuB,GAAO,OACwC,OAAhFlB,EAASmB,EAAQI,EADjBH,EAAUE,EAAAvB,MACuCqB,EAAWpB,OAASoB,GAAWE,EAAAzB,gBAC/E,CAAEG,OAAAA,EAAQX,iBAAkB,aAAY,OAAAiC,EAAA7B,OAAA6B,EAAAE,GAAAF,WAE6B,QAAA,OAAAA,EAAA5B,QAIxD,IAAI+B,SAAQ,SAACC,EAASC,IAC3CvC,EAASwC,WAAaxC,EAASO,MAAMkC,KACpCzC,EACA,CAAE8B,OAAAA,IACF,SAACY,EAAUV,GACTU,GAAOH,EAAOG,GACdJ,EAAQP,QAAQC,SAAAA,EAAYpB,eAGhC,QATU,OAAAsB,EAAAzB,gBAWL,CAAEG,OAXGsB,EAAAvB,KAWKV,iBAAkB,gBAAe,QAAA,UAAA,OAAAiC,EAAArB,UAAAgB,qBACnDf,WAAAC,kEAED,IAAMoB,EAAoB,SAACQ,GACzB,MAA2B,iBAAbA,GAAyB,YAAaA,GAAY,WAAYA,+BA/D9CC,EAAAC,GAAA,OAAAlD,EAAAmB,WAAAC,wCAaA+B,EAAAC,GAAA,OAAA/B,EAAAF,WAAAC,uCArBNiC,EAAgBC,GACxC,IAAKD,EACH,MAAM,IAAI3B,qDARU4B"}