{"version":3,"file":"utils.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { Provider } from '@meta-wallets-kit/types';\r\n\r\nconst isProduction: boolean = process.env.NODE_ENV === 'production';\r\n\r\nexport function warning(message: string) {\r\n  if (!isProduction) {\r\n    console.warn(message);\r\n  }\r\n}\r\n\r\nexport function invariant(condition: any, message?: string): asserts condition {\r\n  if (!condition) {\r\n    throw new Error(`Invariant failed${isProduction || !message ? '.' : `: ${message}`}`);\r\n  }\r\n}\r\n\r\nexport type SendingInterface = 'EIP 1193' | 'Old Web3.js';\r\n\r\nexport async function getAccount(\r\n  provider: Provider,\r\n  sendingInterface?: SendingInterface,\r\n): Promise<{ account: string | null; sendingInterface: SendingInterface }> {\r\n  const { result: account, sendingInterface: nextInterface } = await send<string | null>(\r\n    provider,\r\n    'eth_accounts',\r\n    (accounts: string[]) => accounts[0] || null,\r\n    sendingInterface,\r\n  );\r\n  return { account, sendingInterface: nextInterface };\r\n}\r\n\r\nexport async function getChainId(\r\n  provider: Provider,\r\n  sendingInterface?: SendingInterface,\r\n): Promise<{ chainId: number; sendingInterface: SendingInterface }> {\r\n  const { result: chainId, sendingInterface: nextInterface } = await send<number>(\r\n    provider,\r\n    'eth_chainId',\r\n    (id: string | number) => {\r\n      if (!id) {\r\n        throw new Error('ChainId is not found');\r\n      }\r\n\r\n      return Number(id);\r\n    },\r\n    sendingInterface,\r\n  );\r\n  return { chainId, sendingInterface: nextInterface };\r\n}\r\n\r\nasync function send<T>(\r\n  provider: Provider,\r\n  method: string,\r\n  convert: (value: any) => T,\r\n  sendingInterface?: SendingInterface,\r\n): Promise<{ result: T; sendingInterface: SendingInterface }> {\r\n  if (sendingInterface !== 'Old Web3.js') {\r\n    try {\r\n      const sendResult = await provider.send(method);\r\n      const result = convert(isJsonRPCResponse(sendResult) ? sendResult.result : sendResult);\r\n      return { result, sendingInterface: 'EIP 1193' };\r\n    } catch {\r\n      warning('EIP 1193 sending failed, trying to old Web3.js sending interface');\r\n    }\r\n  }\r\n\r\n  const result: T = await new Promise((resolve, reject) => {\r\n    (provider.sendAsync || provider.send).call(\r\n      provider,\r\n      { method },\r\n      (err: any, sendResult: any) => {\r\n        err && reject(err);\r\n        resolve(convert(sendResult?.result));\r\n      },\r\n    );\r\n  });\r\n\r\n  return { result, sendingInterface: 'Old Web3.js' };\r\n}\r\n\r\nconst isJsonRPCResponse = (response: any): response is { result: any } => {\r\n  return typeof response === 'object' && 'jsonrpc' in response && 'result' in response;\r\n};\r\n"],"names":["isProduction","process","env","NODE_ENV","warning","message","console","warn","invariant","condition","Error","getAccount","_x","_x2","_getAccount","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","provider","sendingInterface","_yield$send","account","nextInterface","wrap","_callee$","_context","prev","next","send","accounts","sent","result","abrupt","stop","getChainId","_x3","_x4","_getChainId","_callee2","_yield$send2","chainId","_callee2$","_context2","id","Number","_x5","_x6","_x7","_x8","_send","_callee3","method","convert","sendResult","_result","_callee3$","_context3","isJsonRPCResponse","t0","Promise","resolve","reject","sendAsync","call","err","response"],"mappings":"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"}