{"version":3,"file":"core.esm.js","sources":["../src/Web3WalletsManager/index.ts"],"sourcesContent":["import { BehaviorSubject } from 'rxjs';\r\nimport * as Web3ProvidersWs from 'web3-providers-ws';\r\nimport * as Web3ProvidersHttp from 'web3-providers-http';\r\nimport { Connector, Provider, SubscribedObject } from '@meta-wallets-kit/types';\r\n\r\nimport { ConnectResult, ConnectionStatus } from './types';\r\n\r\nexport * from './types';\r\n\r\nconst WebsocketProvider = (Web3ProvidersWs as unknown) as typeof Web3ProvidersWs.WebsocketProvider;\r\nconst HttpProvider = (Web3ProvidersHttp as unknown) as typeof Web3ProvidersHttp.HttpProvider;\r\n\r\ntype WebsocketProviderOptions = ConstructorParameters<typeof WebsocketProvider>[1];\r\ntype HttpProviderOptions = ConstructorParameters<typeof HttpProvider>[1];\r\n\r\ntype InfuraNetwork = 'rinkeby' | 'kovan' | 'mainnet' | 'ropsten' | 'goerli';\r\n\r\ninterface Options<W> {\r\n  defaultProvider: OptionsOfDefaultProvider;\r\n  makeWeb3(provider: Provider): W;\r\n}\r\n\r\ntype OptionsOfDefaultProvider =\r\n  | {\r\n      httpRpcUrl: string;\r\n      options?: HttpProviderOptions;\r\n    }\r\n  | {\r\n      wsRpcUrl: string;\r\n      options?: WebsocketProviderOptions;\r\n    }\r\n  | {\r\n      infuraAccessToken: string;\r\n      /** default: 'mainnet' */\r\n      network?: InfuraNetwork;\r\n      options?: WebsocketProviderOptions;\r\n    };\r\n\r\nexport class Web3WalletsManager<W> {\r\n  public web3: W;\r\n  public txWeb3 = new BehaviorSubject<W | null>(null);\r\n  public account = new BehaviorSubject<string | null>(null);\r\n  public chainId = new BehaviorSubject<number | null>(null);\r\n  public status = new BehaviorSubject<ConnectionStatus>('disconnected');\r\n\r\n  private options: Options<W>;\r\n  private activeConnector: Connector | null = null;\r\n  private accountSubscription: SubscribedObject | null = null;\r\n  private chainIdSubscription: SubscribedObject | null = null;\r\n  private disconnectSubscription: SubscribedObject | null = null;\r\n\r\n  constructor(options: Options<W>) {\r\n    this.options = {\r\n      ...options,\r\n      defaultProvider: {\r\n        network: 'mainnet',\r\n        ...options.defaultProvider,\r\n      },\r\n    };\r\n    this.checkOptions();\r\n    this.web3 = options.makeWeb3(this.getDefaultProvider());\r\n\r\n    this.connect = this.connect.bind(this);\r\n    this.disconnect = this.disconnect.bind(this);\r\n\r\n    this.handleAccountChange = this.handleAccountChange.bind(this);\r\n    this.handleChainIdChange = this.handleChainIdChange.bind(this);\r\n    this.handleDisconnect = this.handleDisconnect.bind(this);\r\n  }\r\n\r\n  public async connect(connector: Connector): Promise<ConnectResult> {\r\n    await this.disconnect();\r\n\r\n    this.activeConnector = connector;\r\n    const { makeWeb3 } = this.options;\r\n\r\n    try {\r\n      this.status.next('pending');\r\n\r\n      const { provider } = await connector.connect();\r\n\r\n      const web3 = makeWeb3(provider);\r\n      this.txWeb3.next(web3);\r\n\r\n      const account = await getAccount(connector);\r\n      this.account.next(account);\r\n\r\n      const chainId = await getChainId(connector);\r\n      this.chainId.next(chainId);\r\n\r\n      this.accountSubscription = connector.subscribeConnectAccount(this.handleAccountChange);\r\n      this.chainIdSubscription = connector.subscribeChainId(this.handleChainIdChange);\r\n      this.disconnectSubscription = connector.subscribeDisconnect(this.handleDisconnect);\r\n\r\n      this.status.next('connected');\r\n\r\n      return { provider, account, chainId };\r\n    } catch (error) {\r\n      this.disconnect();\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  public async disconnect() {\r\n    try {\r\n      this.accountSubscription && this.accountSubscription.unsubscribe();\r\n      this.chainIdSubscription && this.chainIdSubscription.unsubscribe();\r\n      this.disconnectSubscription && this.disconnectSubscription.unsubscribe();\r\n      this.activeConnector && (await this.activeConnector.disconnect());\r\n    } finally {\r\n      this.resetState();\r\n    }\r\n  }\r\n\r\n  private resetState() {\r\n    this.activeConnector = null;\r\n    this.accountSubscription = null;\r\n    this.chainIdSubscription = null;\r\n    this.disconnectSubscription = null;\r\n\r\n    this.txWeb3.next(null);\r\n    this.account.next(null);\r\n    this.chainId.next(null);\r\n    this.status.next('disconnected');\r\n  }\r\n\r\n  private checkOptions() {\r\n    if (\r\n      !('httpRpcUrl' in this.options.defaultProvider) &&\r\n      !('wsRpcUrl' in this.options.defaultProvider) &&\r\n      !('infuraAccessToken' in this.options.defaultProvider)\r\n    ) {\r\n      console.error(\r\n        'You need to configure one of these parameters: \"httpRpcUrl\", \"wsRpcUrl\" or \"infuraAccessToken\".',\r\n      );\r\n    }\r\n  }\r\n\r\n  private getDefaultProvider(): Web3ProvidersWs.WebsocketProvider | Web3ProvidersHttp.HttpProvider {\r\n    if ('httpRpcUrl' in this.options.defaultProvider) {\r\n      const { httpRpcUrl, options } = this.options.defaultProvider;\r\n      return new HttpProvider(httpRpcUrl, options);\r\n    }\r\n\r\n    const defaultReconnectOptions = {\r\n      auto: true,\r\n      delay: 5000,\r\n    };\r\n\r\n    if ('wsRpcUrl' in this.options.defaultProvider) {\r\n      const { wsRpcUrl, options } = this.options.defaultProvider;\r\n      return new WebsocketProvider(wsRpcUrl, {\r\n        ...options,\r\n        reconnect: {\r\n          ...defaultReconnectOptions,\r\n          ...options?.reconnect,\r\n        },\r\n      });\r\n    }\r\n\r\n    if ('infuraAccessToken' in this.options.defaultProvider) {\r\n      const { infuraAccessToken, network = 'mainnet', options } = this.options.defaultProvider;\r\n      return new WebsocketProvider(`wss://${network}.infura.io/ws/v3/${infuraAccessToken}`, {\r\n        ...options,\r\n        reconnect: {\r\n          ...defaultReconnectOptions,\r\n          ...options?.reconnect,\r\n        },\r\n      });\r\n    }\r\n\r\n    return assertNever(this.options.defaultProvider);\r\n  }\r\n\r\n  private handleAccountChange(account: string) {\r\n    this.account.next(account);\r\n  }\r\n\r\n  private handleChainIdChange(chainId: number) {\r\n    this.chainId.next(chainId);\r\n  }\r\n\r\n  private handleDisconnect() {\r\n    this.disconnect();\r\n  }\r\n}\r\n\r\nexport function assertNever(value: never): never {\r\n  throw new Error(`Unexpected value: ${value}`);\r\n}\r\n\r\nasync function getAccount(connector: Connector): Promise<string> {\r\n  const account = await connector.getAccount();\r\n\r\n  if (!account) {\r\n    throw new Error('No Ethereum accounts found, you need to create an account in your wallet');\r\n  }\r\n\r\n  return account;\r\n}\r\n\r\nasync function getChainId(connector: Connector): Promise<number> {\r\n  const chainId = await connector.getChainId();\r\n\r\n  if (!chainId) {\r\n    throw new Error('ChainID is not found, you need to choose a network in your wallet');\r\n  }\r\n\r\n  return chainId;\r\n}\r\n"],"names":["WebsocketProvider","Web3ProvidersWs","HttpProvider","Web3ProvidersHttp","Web3WalletsManager","options","BehaviorSubject","_extends","defaultProvider","network","checkOptions","web3","makeWeb3","getDefaultProvider","connect","bind","disconnect","handleAccountChange","handleChainIdChange","handleDisconnect","_proto","prototype","_connect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","connector","_yield$connector$conn","provider","account","chainId","wrap","_callee$","_context","prev","next","activeConnector","status","sent","txWeb3","getAccount","getChainId","accountSubscription","subscribeConnectAccount","chainIdSubscription","subscribeChainId","disconnectSubscription","subscribeDisconnect","abrupt","t0","stop","_x","apply","arguments","_disconnect","_callee2","_callee2$","_context2","unsubscribe","resetState","finish","console","error","_this$options$default","httpRpcUrl","defaultReconnectOptions","auto","delay","_this$options$default2","wsRpcUrl","reconnect","_this$options$default3","infuraAccessToken","_this$options$default4","assertNever","value","Error","_x2","_getAccount","_callee3","_callee3$","_context3","_x3","_getChainId","_callee4","_callee4$","_context4"],"mappings":"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"}