{"code":"import { AbstractConnector } from '@meta-wallets-kit/abstract-connector';\r\nexport class CoinbaseConnector extends AbstractConnector {\r\n    constructor(config) {\r\n        super();\r\n        this.config = config;\r\n    }\r\n    async connect() {\r\n        const { jsonRpcUrl, chainId, ...ctorOptions } = this.config;\r\n        const CoinbaseWalletSDK = (await import('@coinbase/wallet-sdk')).default;\r\n        const coinbase = new CoinbaseWalletSDK(ctorOptions);\r\n        const provider = coinbase.makeWeb3Provider(jsonRpcUrl, chainId);\r\n        await provider.enable();\r\n        this.payload = { provider, coinbase };\r\n        return this.payload;\r\n    }\r\n    async disconnect() {\r\n        if (this.payload) {\r\n            this.payload.coinbase.disconnect();\r\n        }\r\n        super.disconnect();\r\n    }\r\n    subscribeDisconnect(callback) {\r\n        return super.subscribeDisconnect((error) => {\r\n            const isRecoverableDisconnection = error?.code === 1013;\r\n            !isRecoverableDisconnection && callback(error);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map","references":["E:/metawallet/meta-wallets-kit/node_modules/@coinbase/wallet-sdk/dist/index.d.ts","E:/metawallet/meta-wallets-kit/node_modules/@coinbase/wallet-sdk/dist/index.d.ts","E:/metawallet/meta-wallets-kit/packages/abstarct-connector/dist/index.d.ts","E:/metawallet/meta-wallets-kit/packages/types/dist/index.d.ts","E:/metawallet/meta-wallets-kit/node_modules/@coinbase/wallet-sdk/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.ts\"],\"names\":[],\"mappings\":\"AAGA,OAAO,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AAmBzE,MAAM,OAAO,iBAAkB,SAAQ,iBAA4C;IACjF,YAAoB,MAA+B;QACjD,KAAK,EAAE,CAAC;QADU,WAAM,GAAN,MAAM,CAAyB;IAEnD,CAAC;IAEM,KAAK,CAAC,OAAO;QAClB,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,GAAG,WAAW,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAE5D,MAAM,iBAAiB,GAAG,CAAC,MAAM,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC,OAAO,CAAC;QACzE,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAC,WAAW,CAAC,CAAC;QAEpD,MAAM,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAChE,MAAM,QAAQ,CAAC,MAAM,EAAE,CAAC;QAExB,IAAI,CAAC,OAAO,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;QAEtC,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEM,KAAK,CAAC,UAAU;QACrB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;SACpC;QACD,KAAK,CAAC,UAAU,EAAE,CAAC;IACrB,CAAC;IAEM,mBAAmB,CAAC,QAA4B;QACrD,OAAO,KAAK,CAAC,mBAAmB,CAAC,CAAC,KAAW,EAAE,EAAE;YAC/C,MAAM,0BAA0B,GAAG,KAAK,EAAE,IAAI,KAAK,IAAI,CAAC;YACxD,CAAC,0BAA0B,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;CACF\"}","dts":{"name":"E:/metawallet/meta-wallets-kit/packages/coinbase-connector/index.d.ts","writeByteOrderMark":false,"text":"import type { CoinbaseWalletProvider } from '@coinbase/wallet-sdk';\r\nimport type CoinbaseWalletSDKClass from '@coinbase/wallet-sdk';\r\nimport { AbstractConnector } from '@meta-wallets-kit/abstract-connector';\r\nimport { DefaultConnectionPayload, DisconnectCallback, SubscribedObject } from '@meta-wallets-kit/types';\r\ndeclare type CoinbaseWalletSDKOptions = ConstructorParameters<typeof CoinbaseWalletSDKClass>[0];\r\nexport interface CoinbaseConnectionPayload extends DefaultConnectionPayload {\r\n    provider: CoinbaseWalletProvider;\r\n    coinbase: CoinbaseWalletSDKClass;\r\n}\r\nexport interface CoinbaseConnectorConfig extends CoinbaseWalletSDKOptions {\r\n    jsonRpcUrl?: string;\r\n    chainId?: number;\r\n}\r\nexport declare class CoinbaseConnector extends AbstractConnector<CoinbaseConnectionPayload> {\r\n    private config;\r\n    constructor(config: CoinbaseConnectorConfig);\r\n    connect(): Promise<CoinbaseConnectionPayload>;\r\n    disconnect(): Promise<void>;\r\n    subscribeDisconnect(callback: DisconnectCallback): SubscribedObject;\r\n}\r\nexport {};\r\n"}}
