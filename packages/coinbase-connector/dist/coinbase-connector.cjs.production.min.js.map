{"version":3,"file":"coinbase-connector.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable import/no-duplicates */\r\nimport type { CoinbaseWalletProvider } from '@coinbase/wallet-sdk';\r\nimport type CoinbaseWalletSDKClass from '@coinbase/wallet-sdk';\r\nimport { AbstractConnector } from '@meta-wallets-kit/abstract-connector';\r\nimport {\r\n  DefaultConnectionPayload,\r\n  DisconnectCallback,\r\n  SubscribedObject,\r\n} from '@meta-wallets-kit/types';\r\n\r\ntype CoinbaseWalletSDKOptions = ConstructorParameters<typeof CoinbaseWalletSDKClass>[0];\r\n\r\nexport interface CoinbaseConnectionPayload extends DefaultConnectionPayload {\r\n  provider: CoinbaseWalletProvider;\r\n  coinbase: CoinbaseWalletSDKClass;\r\n}\r\n\r\nexport interface CoinbaseConnectorConfig extends CoinbaseWalletSDKOptions {\r\n  jsonRpcUrl?: string;\r\n  chainId?: number;\r\n}\r\n\r\nexport class CoinbaseConnector extends AbstractConnector<CoinbaseConnectionPayload> {\r\n  constructor(private config: CoinbaseConnectorConfig) {\r\n    super();\r\n  }\r\n\r\n  public async connect(): Promise<CoinbaseConnectionPayload> {\r\n    const { jsonRpcUrl, chainId, ...ctorOptions } = this.config;\r\n\r\n    const CoinbaseWalletSDK = (await import('@coinbase/wallet-sdk')).default;\r\n    const coinbase = new CoinbaseWalletSDK(ctorOptions);\r\n\r\n    const provider = coinbase.makeWeb3Provider(jsonRpcUrl, chainId);\r\n    await provider.enable();\r\n\r\n    this.payload = { provider, coinbase };\r\n\r\n    return this.payload;\r\n  }\r\n\r\n  public async disconnect() {\r\n    if (this.payload) {\r\n      this.payload.coinbase.disconnect();\r\n    }\r\n    super.disconnect();\r\n  }\r\n\r\n  public subscribeDisconnect(callback: DisconnectCallback): SubscribedObject {\r\n    return super.subscribeDisconnect((error?: any) => {\r\n      const isRecoverableDisconnection = error?.code === 1013;\r\n      !isRecoverableDisconnection && callback(error);\r\n    });\r\n  }\r\n}\r\n"],"names":["_AbstractConnector","CoinbaseConnector","config","_this","call","_proto","prototype","connect","_connect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$config","jsonRpcUrl","chainId","ctorOptions","coinbase","provider","wrap","_context","prev","next","this","_objectWithoutPropertiesLoose","_excluded","CoinbaseWalletSDK","sent","makeWeb3Provider","enable","payload","abrupt","stop","apply","arguments","disconnect","_disconnect","_callee2","_context2","subscribeDisconnect","callback","error","code","AbstractConnector"],"mappings":"u6OAsB+BA,WAC7B,SAAAC,EAAoBC,SAA+B,OACjDC,EAAAH,EAAAI,yBADkBF,EAA+BC,IADtBH,KAAAC,yEAG5B,IAAAI,EAAAJ,EAAAK,UA4BA,OA5BAD,EAEYE,mBAAO,IAAAC,EAAAC,EAAAC,IAAAC,MAAb,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,IAAAS,eAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACsC,OAAnCR,GADHD,EAC2CU,KAAKrB,QAA7CY,WAAYC,EAAOF,EAAPE,QAAYC,EAAWQ,EAAAX,EAAAY,GAAAL,EAAAE,OAEV,qCAAO,6BAAuB,OAGA,OAFzDL,EAAW,IADXS,EAAiBN,EAAAO,cACgBX,GAEjCE,EAAWD,EAASW,iBAAiBd,EAAYC,GAAQK,EAAAE,OACzDJ,EAASW,SAAQ,OAEe,OAAtCN,KAAKO,QAAU,CAAEZ,SAAAA,EAAUD,SAAAA,GAAWG,EAAAW,gBAE/BR,KAAKO,SAAO,QAAA,UAAA,OAAAV,EAAAY,UAAApB,YACpB,OAAA,WAAA,OAAAJ,EAAAyB,WAAAC,eAAA7B,EAEY8B,sBAAU,IAAAC,EAAA3B,EAAAC,IAAAC,MAAhB,SAAA0B,IAAA,OAAA3B,IAAAS,eAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACDC,KAAKO,SACPP,KAAKO,QAAQb,SAASkB,aAExBnC,EAAAM,UAAM6B,WAAU/B,WAAG,OAAA,UAAA,OAAAkC,EAAAN,UAAAK,YACpB,OAAA,WAAA,OAAAD,EAAAH,WAAAC,eAAA7B,EAEMkC,oBAAA,SAAoBC,GACzB,OAAAxC,EAAAM,UAAaiC,oBAAmBnC,WAAC,SAACqC,GACmB,cAAhBA,SAAAA,EAAOC,OACXF,EAASC,OAE3CxC,GA/BoC0C"}